package gqlresolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"

	"github.com/Darkclainer/japwords/graphql/gqlmodel"
)

// Lemmas is the resolver for the Lemmas field.
func (r *queryResolver) Lemmas(ctx context.Context, query string) (*gqlmodel.LemmasResult, error) {
	lemmas, err := r.multiDict.Query(ctx, query)
	if err != nil {
		return nil, err
	}
	projectedLemmas := expandLemmas(lemmas)
	exstingIds, _ := r.ankiClient.SearchProjectedLemmas(ctx, projectedLemmas)
	result := make([]*gqlmodel.LemmaNoteInfo, len(projectedLemmas))
	for i, projectedLemma := range projectedLemmas {
		result[i] = &gqlmodel.LemmaNoteInfo{
			Lemma:  projectedLemma,
			NoteID: "",
		}
		if len(exstingIds) != 0 {
			result[i].NoteID = exstingIds[i].String()
		}
	}
	return &gqlmodel.LemmasResult{
		Lemmas: result,
	}, nil
}
