# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - graphql/schema/*.graphqls

# Where should the generated server code go?
exec:
  filename: graphql/gqlgenerated/generated.go
  package: gqlgenerated

# Uncomment to enable federation
# federation:
#   filename: graph/generated/federation.go
#   package: generated

# Where should any generated models go?
model:
  filename: graphql/gqlmodel/models_gen.go
  package: gqlmodel

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: graphql/gqlresolver
  package: gqlresolver

# Optional: turn on use ` + "`" + `gqlgen:"fieldName"` + "`" + ` tags in your models
struct_tag: gqlgen

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - "github.com/Darkclainer/japwords/graphql/gqlmodel"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Uint:
    model:
      - github.com/99designs/gqlgen/graphql.Uint
      - github.com/99designs/gqlgen/graphql.Uint64
      - github.com/99designs/gqlgen/graphql.Uint32

  AccentDirection:
    model:
      - github.com/Darkclainer/japwords/pkg/lemma.AccentDirection
  Lemma:
    model:
      - github.com/Darkclainer/japwords/pkg/lemma.Lemma
  Word:
    model:
      - github.com/Darkclainer/japwords/pkg/lemma.Word
  Sense:
    model:
      - github.com/Darkclainer/japwords/pkg/lemma.WordSense
  Furigana:
    model:
      - github.com/Darkclainer/japwords/pkg/lemma.FuriganaChar
  PitchShape:
    model:
      - github.com/Darkclainer/japwords/pkg/lemma.PitchShape

  ProjectedLemmaInput:
    model:
      - github.com/Darkclainer/japwords/pkg/lemma.ProjectedLemma
  ProjectedWordInput:
    model:
      - github.com/Darkclainer/japwords/pkg/lemma.ProjectedWord
  FuriganaInput:
    model:
      - github.com/Darkclainer/japwords/pkg/lemma.FuriganaChar
  PitchShapeInput:
    model:
      - github.com/Darkclainer/japwords/pkg/lemma.PitchShape

  AddNoteRequest:
    model:
      - github.com/Darkclainer/japwords/pkg/anki.AddNoteRequest
  AddNoteField:
    model:
      - github.com/Darkclainer/japwords/pkg/anki.AddNoteField
  AddNoteRequestInput:
    model:
      - github.com/Darkclainer/japwords/pkg/anki.AddNoteRequest
  AddNoteFieldInput:
    model:
      - github.com/Darkclainer/japwords/pkg/anki.AddNoteField
